#include<bits/stdc++.h>
using namespace std;

int totalPaths = 0;
bool isSafePath(int i , int j , int n , vector<vector<bool>>&visited)
{
    return i>=0 && j>=0 && i<n && j<n && visited[i][j] == false;
}
void helper(int i, int j,int n , vector<vector<int>> &grid, vector<vector<bool>>&visited)
{
    if( i==n-1 && j==n-1){
        totalPaths++;
        return;
    }
    
    if(!isSafePath(i,j,n,visited)){ return; }
    
    visited[i][j] = true;
    if(i+1<n && grid[i+1][j]==0)
        helper(i+1,j,n,grid,visited);

    if(i-1>=0 && grid[i-1][j]==0)
        helper(i-1,j,n,grid,visited);

    if(j+1<n && grid[i][j+1]==0)
        helper(i,j+1,n,grid,visited);

    if(j-1>=0 && grid[i][j-1]==0)
        helper(i,j-1,n,grid,visited);

    
    visited[i][j] = false;
    return;
}

int count_rat_Path(vector<vector<int>>&grid)
{
    int n = grid.size();
    vector<vector<bool>>visited(n,vector<bool>(n,false));
    helper(0,0,n,grid,visited);
    return totalPaths;
}

int main(){
    int n;
    cin >> n;
    vector<vector<int>>grid(n,vector<int>(n,0));
    for(int i=0 ; i<=n-1 ; i++){
        for(int j=0 ; j<=n-1 ; j++){
            cin >> grid[i][j];
        }
    }
    cout << count_rat_Path(grid)<< endl;
    return 0;
}

